{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"overfl",
				"overflow-x"
			],
			[
				"font",
				"font-family"
			],
			[
				"backgr",
				"background-color"
			],
			[
				"soupe",
				"soupe_product\tstatement"
			],
			[
				"pp",
				"pprint\tfunction"
			],
			[
				"user",
				"User\tclass"
			],
			[
				"creat",
				"create_user\tfunction"
			],
			[
				"passwor",
				"password2"
			],
			[
				"password",
				"password1"
			],
			[
				"backg",
				"background-color"
			],
			[
				"brand",
				"brand_detail\tfunction"
			],
			[
				"name",
				"name__icontains"
			],
			[
				"red",
				"redirect_to\tstatement"
			],
			[
				"fvo",
				"FavoriteView\tclass"
			],
			[
				"User",
				"UserAccountView\tclass"
			],
			[
				"view",
				"View\tclass"
			],
			[
				"Model",
				"ModelForm\tModelForm"
			],
			[
				"Get",
				"GET"
			],
			[
				"conten",
				"justify-content"
			],
			[
				"alignt",
				"align-content"
			],
			[
				"product",
				"product_query"
			],
			[
				"h",
				"hr\t<hr>"
			],
			[
				"bacgk",
				"background-color"
			],
			[
				"get_",
				"get_object_or_404\tfunction"
			],
			[
				"get",
				"get_template\tfunction"
			],
			[
				"format",
				"formatted_products\tstatement"
			],
			[
				"brandsli",
				"brands_list_split\tstatement"
			],
			[
				"db",
				"db_file.csv"
			],
			[
				"time",
				"TimeField\tclass"
			],
			[
				"albums",
				"ALBUMS\tinstance"
			],
			[
				"getrand",
				"getRandomInt"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"border",
				"border-radius"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"fontst",
				"font-style"
			],
			[
				"this",
				"thisVm"
			],
			[
				"medi",
				"mediawikirequest\tstatement"
			],
			[
				"js",
				"json_output"
			],
			[
				"random",
				"random_place\tstatement"
			],
			[
				"media",
				"mediawikirequest\tstatement"
			],
			[
				"encod",
				"encodeURI\t( uri: string ): string Global"
			],
			[
				"me",
				"mediawiki_req\tstatement"
			],
			[
				"search",
				"search_info_from_adress_query\tfunction"
			],
			[
				"g",
				"gmaps_filtered_data"
			],
			[
				"Googm",
				"GoogleMapsData\tclass"
			],
			[
				"malis",
				"ma_liste2\tstatement"
			],
			[
				"med",
				"MediawikiRequest\tclass"
			],
			[
				"gmapsre",
				"gmaps_request"
			],
			[
				"gm",
				"GMapsRequest\tclass"
			],
			[
				"searc",
				"search_from_gmaps\tfunction"
			],
			[
				"add",
				"address_lng\tstatement"
			],
			[
				"Q",
				"Question"
			],
			[
				"Questi",
				"QuestionParser\tclass"
			],
			[
				"mediaw",
				"mediawiki_filtered_place_data\tstatement"
			],
			[
				"gmaps",
				"gmaps_url\tstatement"
			],
			[
				"response",
				"url_response"
			],
			[
				"url",
				"urllib\tmodule"
			],
			[
				"wik",
				"wikimedia_article_url\tstatement"
			],
			[
				"json",
				"json_response\tstatement"
			],
			[
				"requets",
				"requests\tmodule"
			],
			[
				"address",
				"address_lat\tstatement"
			],
			[
				"ra",
				"gmaps_raw_data"
			],
			[
				"gma",
				"gmaps_key\tstatement"
			],
			[
				"addres",
				"address_query\tstatement"
			],
			[
				"data",
				"datas_response\tstatement"
			],
			[
				"Gmaps",
				"GMapsRequest"
			],
			[
				"userlan",
				"user_language"
			],
			[
				"qer",
				"query_filter"
			],
			[
				"halfw",
				"half_words_filter\tstatement"
			],
			[
				"userqu",
				"user_query\tstatement"
			],
			[
				"userq",
				"user_query"
			],
			[
				"usreques",
				"user_question"
			],
			[
				"Wikime",
				"TestWikimediaRequest"
			],
			[
				"pos",
				"POSITION1\tstatement"
			],
			[
				"PO",
				"POSITION2\tstatement"
			],
			[
				"zone",
				"Zone\tclass"
			],
			[
				"position",
				"Position\tclass"
			],
			[
				"longi",
				"longitude_degrees\tstatement"
			],
			[
				"setinv",
				"setInterval(func, delay)\tWindow"
			],
			[
				"setInterv",
				"setInterval(func, delay)\tWindow"
			],
			[
				"setInt",
				"setInterval(func, delay)\tWindow"
			],
			[
				"setINTER",
				"setInterval(func, delay)\tWindow"
			],
			[
				"timeout",
				"setTimeout(func, delay)\tWindow"
			],
			[
				"sess",
				"session26.css"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"settim",
				"setTimeout(func, delay)\tWindow"
			],
			[
				"settimeout",
				"setTimeout(func, delay)\tWindow"
			],
			[
				"sett",
				"setTimeout\t( handler: any, timeout?: long, arguments_..: any ): long Window"
			],
			[
				"exchan",
				"exchanges_data\tstatement"
			],
			[
				"pro",
				"product_id"
			],
			[
				"restaur",
				"restaurant_id"
			],
			[
				"ing",
				"ingredient_id"
			],
			[
				"syb",
				"symbol_pair\tstatement"
			],
			[
				"Producst",
				"Productsstores\tclass"
			],
			[
				"delete",
				"delete_productsstores"
			],
			[
				"csvfi",
				"CLEANED_CSV_FILE\tstatement"
			],
			[
				"fillprod",
				"fill_productsstores\tfunction"
			],
			[
				"Producs",
				"Productsstores\tclass"
			],
			[
				"producc",
				"products_dict"
			],
			[
				"produ",
				"product_from_db\tstatement"
			],
			[
				"Inte",
				"IntegerField"
			],
			[
				"nutri",
				"nutri_grade"
			],
			[
				"Head",
				"HEADERS_LIST\tstatement"
			],
			[
				"oper",
				"OperationalError"
			],
			[
				"cfgf",
				"cfg_fname\tparam"
			],
			[
				"read",
				"readlines\tfunction"
			],
			[
				"cfg",
				"CFG_FNAME\tstatement"
			],
			[
				"mainme",
				"main_menu_actions"
			],
			[
				"downlo",
				"download_clean_file"
			],
			[
				"config",
				"ConfigParser\tclass"
			],
			[
				"Config",
				"ConfigParser\tclass"
			],
			[
				"down",
				"download_file"
			],
			[
				"clean",
				"csv_cleaner\tfunction"
			],
			[
				"pla",
				"_platform"
			],
			[
				"don",
				"download\tfunction"
			],
			[
				"tqd",
				"TqdmDL\tclass"
			],
			[
				"subsi",
				"substitute_data\tstatement"
			],
			[
				"substit",
				"substitute\tstatement"
			],
			[
				"su",
				"substitute_table\tstatement"
			],
			[
				"sub",
				"substitute_table\tstatement"
			],
			[
				"nutr",
				"nutri_grade"
			],
			[
				"edit",
				"edit_favs"
			],
			[
				"favo",
				"favorites_ids"
			],
			[
				"edt",
				"edit_fav_choice"
			],
			[
				"editfav",
				"edit_fav_choice"
			],
			[
				"edfi",
				"edit_fav_choice\tstatement"
			],
			[
				"editf",
				"edit_fav_choice\tstatement"
			],
			[
				"product_",
				"product_table\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "nutellove/nutellove/settings.py",
			"settings":
			{
				"buffer_size": 4714,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/htmlcov/products_views_py.html",
			"settings":
			{
				"buffer_size": 62624,
				"line_ending": "Unix"
			}
		},
		{
			"file": "nutellove/products/urls.py",
			"settings":
			{
				"buffer_size": 1576,
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/products/tests.py",
			"settings":
			{
				"buffer_size": 9253,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/products/views.py",
			"settings":
			{
				"buffer_size": 7401,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/products/templates/products/list_better_product.html",
			"settings":
			{
				"buffer_size": 986,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/products/templates/products/category_or_brand_details.html",
			"settings":
			{
				"buffer_size": 526,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/templates/base.html",
			"settings":
			{
				"buffer_size": 2093,
				"line_ending": "Windows"
			}
		},
		{
			"file": "nutellove/products/templates/products/product_details.html",
			"settings":
			{
				"buffer_size": 2690,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/conda_mathplots.sublime-build",
					""
				],
				[
					"Packages/User/conda_mcgyver.sublime-build",
					""
				],
				[
					"Packages/User/venv_pygames.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				]
			],
			[
				"Packages/Default/Syntax Tests.sublime-build",
				"Performance"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 338.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"git push",
				"Git: Push Current Branch"
			],
			[
				"gp",
				"Git: Push"
			],
			[
				"gar",
				"Git: Add Remote"
			],
			[
				"git push ",
				"Git: Push"
			],
			[
				"qui",
				"Git: Quick Commit"
			],
			[
				"quick",
				"Git: Quick Add"
			],
			[
				"git quic",
				"Git: Quick Add"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				"git log",
				"Git: Log"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git ",
				"Git: Remote"
			],
			[
				"git quick",
				"Git: Quick Commit"
			],
			[
				"git",
				"Git: Quick Status"
			],
			[
				"git repo",
				"Git: Switch Repo"
			],
			[
				"git ci",
				"Git: Commit"
			],
			[
				"git quick add",
				"Git: Quick Add"
			],
			[
				"git qua",
				"Git: Quick Add"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"remote",
				"Git: Remote"
			],
			[
				"remote ",
				"Git: Remote"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"git remote",
				"Git: Remote"
			],
			[
				"git remote ",
				"Git: Remote"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"git quick comit",
				"Git: Quick Commit"
			],
			[
				"git init",
				"Git: Init"
			],
			[
				"qu",
				"Git: Quick Add"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"python ",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"packages",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Package Control: List Packages"
			]
		],
		"width": 544.0
	},
	"console":
	{
		"height": 361.0,
		"history":
		[
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\",53870))",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/PC/Desktop/projets_OC/projet_8",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/dumps",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/css",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/vendor",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/vendor/jquery",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/registration",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/templates",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/templates/users"
	],
	"file_history":
	[
		"/C/Users/PC/DataScience/DataScience-Python3/Python101.ipynb",
		"/C/Users/PC/Desktop/markupsafe/setup.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/css/creative.css",
		"/C/Users/PC/Desktop/projets_clients/AMOE/AMOE_test_site Folder/AMOE_test_site Folder/Links/QUISSAC_mini.jpg",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/favorites.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/chosen_product.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/list_better_product.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/list_of_products.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/list_of_brands_categories.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov/index.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/product_details.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/.coveragerc",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/urls.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/models.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/urls.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/.coverage",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/list_all_products.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/views.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/tests.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov/users_urls_py.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/urls.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov/users_views_py.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/base.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/views.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/forms.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/tests.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov/status.json",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/htmlcov/coverage_html.js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/readme.md",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/Procfile",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/Makefile",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/constants.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/legals.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/search_form_header.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/header.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/search_form.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/search.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/registration_form.html",
		"/C/Users/PC/Desktop/projets_OC/projet_7/gpb_app/tests/test_utils_mediawiki_request.py",
		"/C/Users/PC/Desktop/projets_OC/projet_7/gpb_app/tests/test_controllers_question.py",
		"/C/Users/PC/Desktop/projets_OC/projet_7/gpb_app/tests/test_utils_google_maps_request.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/url.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/models.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/db_feeding.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/install.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/csv_cleaner.py",
		"/C/Users/PC/Desktop/test.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/tests.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/index.html",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/config/index.js",
		"/C/Users/PC/Desktop/ASEM/asem/static/css/modern-business.css",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/build/webpack.base.conf.js",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/build/webpack.prod.conf.js",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/build/webpack.dev.conf.js",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/backend/gpb_app/templates/app.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/category_or_brand_details.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/list_brand.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/account.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/list_of_brands.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/form_template.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/templates/users/change_password.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/users/templates/change_password.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/change_password.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/settings.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/brand_details.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/details.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/category_details.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/listing.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/pagination.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/list.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/registration/login.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/400.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/css/404.css",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/404.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/500.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/views.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/manage.py",
		"/C/Users/PC/Desktop/ASEM/asem/asem/settings.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/dumps/products.json",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/footer.html",
		"/C/Users/PC/Desktop/TP 1 GMM.py",
		"/C/Users/PC/Desktop/autre/css.css",
		"/C/Users/PC/Desktop/TP 1 GM.PY",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/admin.py",
		"/C/Users/PC/Desktop/ASEM/startbootstrap-modern-business-gh-pages/index.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/favorites.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/migrations/0001_initial.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/migrations/0005_favorite_user.py",
		"/C/Users/PC/Desktop/projets_OC/projet_5/src/menu.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/account_form.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/vendor/jquery/jquery.js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/login_form.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/registration/login_form.html",
		"/C/Users/PC/Envs/nutellove/Lib/site-packages/widget_tweaks/templatetags/widget_tweaks.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/controllers.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/apps.py",
		"/C/Users/PC/Desktop/ASEM/startbootstrap-modern-business-gh-pages/css/modern-business.css",
		"/C/Users/PC/Desktop/ASEM/new_design.html",
		"/C/Users/PC/Desktop/ASEM/asm.html",
		"/C/Users/PC/Desktop/ASEM/css.css",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/list_of_products.html",
		"/C/Users/PC/Desktop/decouvrez_django/disquaire_project/store/admin.py",
		"/C/Users/PC/Desktop/decouvrez_django/disquaire_project/disquaire_project/urls.py",
		"/C/Users/PC/Desktop/decouvrez_django/disquaire_project/store/urls.py",
		"/C/Users/PC/Desktop/decouvrez_django/disquaire_project/disquaire_project/settings.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templatetags/proper_paginate.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/js/jquery.twbsPagination.js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/js/responsive-paginate.js",
		"/C/Users/PC/Desktop/rpage/responsive-paginate.js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/js/creative.js",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/js/auxiliary-rpage-2e6fffa/composer.json",
		"/C/Users/PC/Desktop/ASEM/startbootstrap-modern-business-gh-pages/full-width.html",
		"/C/Users/PC/Desktop/new_design.html",
		"/C/Users/PC/Desktop/asm.html",
		"/C/Users/PC/Desktop/css.css",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/proper_paginate.py",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/src/components/GmapsWiki.vue",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/static/vendor/bootstrap/css/bootstrap.css",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/src/components/NotFound.vue",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/src/components/Home.vue",
		"/C/Users/PC/Desktop/projets_OC/projet_7_vue/frontend/src/App.vue",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/nutellove/__init__.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/not_found.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/search.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/views.py",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/static/products/css/creative.css",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/templates/shared/list.html",
		"/C/Users/PC/Desktop/projets_OC/projet_8/nutellove/products/templates/products/shared/footer.html"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"product",
			"serif",
			" product",
			"product",
			"badge nutri",
			"nutri-",
			"{{ chosen_product.nutri_grade }}",
			"chosen_product.nutri_grade",
			".nutri_grade",
			"nutri_grade",
			"\"\"",
			"'),\n",
			"qsdqd",
			"Soupe",
			"soupe",
			"self.product",
			"product",
			"object",
			"div",
			"col-lg-6 mt-1",
			"https://",
			"authenticate",
			"Login",
			"login",
			"update_session_auth_hash",
			"PasswordChangeForm",
			"Favorite",
			"Product",
			"Category",
			"Brand",
			"testss",
			"password",
			"user",
			"password",
			"password1",
			"name",
			"new_bookings",
			"detail_page",
			"detail",
			"test_detail_page_returns_200",
			"products",
			"last_modified_t",
			"product_detail",
			"album",
			"album_id",
			"detail",
			"store",
			"title",
			"album",
			"Album",
			"}\n",
			"span",
			"vbottom",
			"                 \n",
			"favorite.substitute.cat.name",
			"250",
			"'Category'",
			"'Brand'",
			"Brand",
			"brand",
			"Brand",
			"{% if model == Brand %}{% url 'products:brand_detail' obj_id=obj.id %} {% elif model == Category %}{% url 'products:category_detail' obj_id=obj.id %}{% endif %}",
			"elif model == Category",
			"elif",
			"            obj='category',",
			"obj='brand',",
			"list_of_brands",
			"brand",
			"brand_id",
			"            attribute='cat',",
			"            attribute='brands',",
			"attribute",
			"brand",
			"category",
			"BrandDetail",
			"category",
			"Category",
			"category",
			"brands",
			"object_id",
			"brand_id",
			" \n",
			"%}\n",
			"brand",
			"6",
			"0",
			"0px 2px 5px 0px rgba(0,0,0,0.21)!important",
			"<div class=\"row\">",
			"products",
			"welcome",
			"8",
			" ,",
			"details",
			"list_all_products",
			"brand",
			"Brand",
			"brand",
			"Brand",
			"brand",
			"h3",
			"products_list",
			"pad",
			"%}",
			" = ",
			"{{ brand.name }}",
			"product",
			"</a>",
			"<a href=\"\">",
			"chosen_product",
			"</a>",
			"<a href=\"\">",
			"</a>",
			"<a href=\"\">",
			"'))",
			"error",
			"login",
			"products_favorite",
			"icons",
			"PROJECT_ROOT",
			"PROJET_ROOT",
			"BASE_DIR",
			"chosen_product",
			"<span class=\"b",
			"<span",
			"Nutriscore",
			"chosen_product",
			"Nutriscore",
			"<p>"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"]\n",
			"\t",
			"    ",
			"\t\t",
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "nutellove/nutellove/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4714,
						"regions":
						{
						},
						"selection":
						[
							[
								2668,
								2668
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 14,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 966.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "nutellove/htmlcov/products_views_py.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 62624,
						"regions":
						{
						},
						"selection":
						[
							[
								1252,
								1252
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "nutellove/products/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1576,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								28
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "nutellove/products/tests.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9253,
						"regions":
						{
						},
						"selection":
						[
							[
								4432,
								4432
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1260.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "nutellove/products/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7401,
						"regions":
						{
						},
						"selection":
						[
							[
								4150,
								4150
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4149,
										4150
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										4145,
										4146
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4149,
										4150
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										4145,
										4146
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1312.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "nutellove/products/templates/products/list_better_product.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 986,
						"regions":
						{
						},
						"selection":
						[
							[
								194,
								180
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										194,
										195
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										179,
										180
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "nutellove/products/templates/products/category_or_brand_details.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 526,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										77,
										78
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										62,
										63
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "nutellove/templates/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2093,
						"regions":
						{
						},
						"selection":
						[
							[
								1456,
								1456
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										16,
										17
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "nutellove/products/templates/products/product_details.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2690,
						"regions":
						{
						},
						"selection":
						[
							[
								820,
								820
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 368.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 98.0
	},
	"output.git-init":
	{
		"height": 98.0
	},
	"output.git-push":
	{
		"height": 98.0
	},
	"output.git-remote":
	{
		"height": 98.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/venv_nutellove.sublime-build",
	"project": "projet_8.sublime-project",
	"replace":
	{
		"height": 94.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"get",
				"C:\\Users\\PC\\Desktop\\python_training\\CodinGame\\CodersStrikeBack.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 239.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
